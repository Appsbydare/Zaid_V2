Get Deposit Records (on-chain)
Query deposit records.

tip
endTime - startTime should be less than 30 days. Query last 30 days records by default.
Support using main or sub UID api key to query deposit records respectively.
HTTP Request
GET /v5/asset/deposit/query-record

Request Parameters
Parameter	Required	Type	Comments
coin	false	string	Coin, uppercase only
startTime	false	integer	The start timestamp (ms) Note: the query logic is actually effective based on second level
endTime	false	integer	The end timestamp (ms) Note: the query logic is actually effective based on second level
limit	false	integer	Limit for data size per page. [1, 50]. Default: 50
cursor	false	string	Cursor. Use the nextPageCursor token from the response to retrieve the next page of the result set
Response Parameters
Parameter	Type	Comments
rows	array	Object
> coin	string	Coin
> chain	string	Chain
> amount	string	Amount
> txID	string	Transaction ID
> status	integer	Deposit status
> toAddress	string	Deposit target address
> tag	string	Tag of deposit target address
> depositFee	string	Deposit fee
> successAt	string	Last updated time
> confirmations	string	Number of confirmation blocks
> txIndex	string	Transaction sequence number
> blockHash	string	Hash number on the chain
> batchReleaseLimit	string	The deposit limit for this coin in this chain. "-1" means no limit
> depositType	string	The deposit type. 0: normal deposit, 10: the deposit reaches daily deposit limit, 20: abnormal deposit
> fromAddress	string	From address of deposit, only shown when the deposit comes from on-chain and from address is unique, otherwise gives ""
nextPageCursor	string	Refer to the cursor request parameter
RUN >>
Request Example
HTTP
Python
Node.js
const { RestClientV5 } = require('bybit-api');

const client = new RestClientV5({
  testnet: true,
  key: 'xxxxxxxxxxxxxxxxxx',
  secret: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
});

client
  .getDepositRecords({
    coin: 'USDT'
  })
  .then((response) => {
    console.log(response);
  })
  .catch((error) => {
    console.error(error);
  });

Response Example
{
    "retCode": 0,
    "retMsg": "success",
    "result": {
        "rows": [
            {
                "coin": "USDT",
                "chain": "ETH",
                "amount": "10000",
                "txID": "skip-notification-scene-test-amount-202212270944-533285-USDT",
                "status": 3,
                "toAddress": "test-amount-address",
                "tag": "",
                "depositFee": "",
                "successAt": "1672134274000",
                "confirmations": "10000",
                "txIndex": "",
                "blockHash": "",
                "batchReleaseLimit": "-1",
                "depositType": "0",
                "fromAddress": ""
            }
        ],
        "nextPageCursor": "eyJtaW5JRCI6MTA0NjA0MywibWF4SUQiOjEwNDYwNDN9"
    },
    "retExtInfo": {},
    "time": 1672191992512
}

Previous
Set Deposit Account
Next
Get


_______________________________
REST APIGet Fiat Deposit Withdraw History
Get Fiat Deposit/Withdraw History (USER_DATA)
API Description
Get Fiat Deposit/Withdraw History

HTTP Request
GET /sapi/v1/fiat/orders

Request Weight(UID)
90000

Request Parameters
Name	Type	Mandatory	Description
transactionType	STRING	YES	0-deposit,1-withdraw
beginTime	LONG	NO	
endTime	LONG	NO	
page	INT	NO	default 1
rows	INT	NO	default 100, max 500
recvWindow	LONG	NO	
timestamp	LONG	YES	
If beginTime and endTime are not sent, the recent 30-day data will be returned.
Response Example
{
   "code": "000000",
   "message": "success",
   "data": [
   {
      "orderNo":"7d76d611-0568-4f43-afb6-24cac7767365",
      "fiatCurrency": "BRL",
      "indicatedAmount": "10.00",  
      "amount": "10.00", 
      "totalFee": "0.00",   // Trade fee
      "method": "BankAccount",  // Trade method
      "status": "Expired",  // Processing, Failed, Successful, Finished, Refunding, Refunded, Refund Failed, Order Partial credit Stopped
      "createTime": 1626144956000,
      "updateTime": 1626400907000   
   }
   ],
   "total": 1,
   "success": true
}